@model IEnumerable<EventsPlanner.Models.Event>

@{
    ViewBag.Title = "Events";
}
@section styles{
    @Styles.Render("~/Content/event-form.css")
    @Styles.Render("~/Content/Libs/animate.css")
    @Styles.Render("~/Content/Libs/bootstrap-datetimepicker.css")

}
@section scripts{

    @Scripts.Render("~/Scripts/Libs/moment.js")
    @Scripts.Render("~/Scripts/events-page.js")
    @Scripts.Render("~/Scripts/Libs/bootstrap-datetimepicker.js")
    @Scripts.Render("~/Scripts/weather-functions.js")
}
    <style>
        .material-switch > input[type="checkbox"] {
            display: none;
        }

        .material-switch > label {
            cursor: pointer;
            height: 0px;
            position: relative;
            width: 40px;
        }

        .material-switch > label::before {
            background: rgb(0, 0, 0);
            box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);
            border-radius: 8px;
            content: '';
            height: 16px;
            margin-top: -8px;
            position: absolute;
            opacity: 0.3;
            transition: all 0.4s ease-in-out;
            width: 40px;
        }

        .material-switch > label::after {
            background: rgb(255, 255, 255);
            border-radius: 16px;
            box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);
            content: '';
            height: 24px;
            left: -4px;
            margin-top: -8px;
            position: absolute;
            top: -4px;
            transition: all 0.3s ease-in-out;
            width: 24px;
        }

        .material-switch > input[type="checkbox"]:checked + label::before {
            background: inherit;
            opacity: 0.5;
        }

        .material-switch > input[type="checkbox"]:checked + label::after {
            background: inherit;
            left: 20px;
        }
    </style>

<div class="row " style="margin:30px 0px; min-height:560px">
    <div class="col-md-8">

        <div id="switcherListMap" style="margin:15px;">
            <span style="padding-right:10px;">Список</span>
                <div class="material-switch" style="display:inline-block">
                    <input id="someSwitchOptionDefault" name="someSwitchOption001" type="checkbox" />
                    <label for="someSwitchOptionDefault" class="label-default"></label>
                </div>
            <span style ="padding-left:10px;">Карта</span>
        </div>
      

        <table class="table" id="eventsTable">
            <tr>
                <th>
                    ID
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EndDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.EventId
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.StartDate
                    </td>
                    <td>
                        @item.EndDate
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        <button type="button" class="btn btn-link"
                                onclick="alert('aa')">
                            Удалить
                        </button>
                        <button type="button" class="btn btn-link"
                                onclick="GetInfoEventForm(@item.EventId)">
                            Показать
                        </button>

                    </td>
                </tr>
            }

        </table>

        <div id="eventsPageCalendar" style="height:600px; display:none;"></div>


    </div>
    <div class="col-md-4">
        <div id="event-form" style="margin-top: 0px !important; position:fixed; width:350px">
            <span style="font-size:24px; font-weight:100  !important">
                <small style="color:#b8b8b8">Выбирете событие.</small>
            </span>

        </div>

    </div>
</div>

<script>

    $('#someSwitchOptionDefault').change(function() {
      //alert($(this).prop('checked'))
        if ($(this).prop('checked')) {
            $('#eventsTable').css("display", "none");
            $('#eventsPageCalendar').css("display", "block");
        }
        else {
            $('#eventsTable').css("display", "block");
            $('#eventsPageCalendar').css("display", "none");
        }
    })

    var Debug;
    var eventsMap;
    ymaps.ready(init);
        function init(){
             eventsMap = new ymaps.Map("eventsPageCalendar", {
                center: [53.89, 27.56],
                zoom: 6
            }, {
                // Ограничим область карты.
                restrictMapArea: [[50, 21], [58, 34]]
            });
            ymaps.borders.load('001', {
                lang: 'ru',
                quality: 2
            }).then(function (result) {

                // Создадим многоугольник, который будет скрывать весь мир, кроме заданной страны.
                var background = new ymaps.Polygon([
                    [
                        [85, -179.99],
                        [85, 179.99],
                        [-85, 179.99],
                        [-85, -179.99],
                        [85, -179.99]
                    ]
                ], {}, {
                    fillColor: '#66666666',
                    strokeWidth: 0,
                    // Для того чтобы полигон отобразился на весь мир, нам нужно поменять
                    // алгоритм пересчета координат геометрии в пиксельные координаты.
                    coordRendering: 'straightPath'
                });

                // Найдём страну по её iso коду.
                var region = result.features.filter(function (feature) { return feature.properties.iso3166 == 'BY'; })[0];

                // Добавим координаты этой страны в полигон, который накрывает весь мир.
                // В полигоне образуется полость, через которую будет видно заданную страну.
                var masks = region.geometry.coordinates;
                masks.forEach(function (mask) {
                    background.geometry.insert(1, mask);
                });

                // Добавим многоугольник на карту.
                eventsMap.geoObjects.add(background);
            })
            // } ограничить страной


            var myPlacemark

            @foreach (var item in Model)
            {
                string bodyString = item.StartDate.ToString("dd.MM.yyyy H:mm") + " - ";
                if (item.StartDate.ToString("dd.MM.yyyy") != item.EndDate.ToString("dd.MM.yyyy"))
                {
                    bodyString += item.EndDate.ToString("dd.MM.yyyy");
                }
                bodyString += item.EndDate.ToString("H:mm");
                if (item.Latitude != null && item.Longitude != null)
                {
                    <Text>
                        if(@item.Latitude != null && @item.Longitude != null)
                        CreatePlaceMark(@item.Latitude, @item.Longitude, @item.EventId, "@item.Name", "@bodyString", "@item.Description");
                    </Text>
                }
             }


        }

    function CreatePlaceMark(lat, lon, id, name, date, descr) {
        
        var eventId = id;
        var myPlacemark = new ymaps.Placemark([lat, lon], {
        // Чтобы балун и хинт открывались на метке, необходимо задать ей определенные свойства.

            balloonContentHeader: name,
            balloonContentBody: date+ " <br>" + descr,
            balloonContentFooter: '<button type="button" class="btn btn-link"\
                                    onclick="GetInfoEventForm(' + eventId+ ')">\
                                    Показать\
                                    </button>',
            hintContent: name
        });
        myPlacemark.id = eventId;
        myPlacemark.events.add('click', function () {
            //alert(myPlacemark.id);
        });
        eventsMap.geoObjects.add(myPlacemark);
    }


</script>